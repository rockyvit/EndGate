<?xml version="1.0" encoding="UTF-8"?>

	<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:aop="http://www.springframework.org/schema/aop"
		
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			
			http://www.springframework.org/schema/mvc
			https://www.springframework.org/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

		
		<context:property-placeholder
			location="classpath:jdbc.properties" />
		<!-- <context:property-placeholder location="classpath:mail.properties"/>-->

		<!-- <context:component-scan base-package="com" />
		<mvc:resources location="/resource/" mapping="/resource/**" />
		<mvc:default-servlet-handler />
		<mvc:annotation-driven /> -->




		<bean id="dataSource"
			class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<property name="driverClassName"
				value="${jdbc.driverClassName}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- Hibernate SessionFactory -->
		<bean id="sessionFactory"
			class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"
			p:dataSource-ref="dataSource"
			p:mappingResources="foodordering.hbm.xml">
			<property name="hibernateProperties">
				<props>
					<prop key="hibernate.dialect">
						${hibernate.dialect}
					</prop>
					<prop key="hibernate.show_sql">
						${hibernate.show_sql}
					</prop>
					<prop key="hibernate.generate_statistics">
						${hibernate.generate_statistics}
					</prop>
				</props>
			</property>
			<property name="eventListeners">
				<map>
					<entry key="merge">
						<bean
							class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
					</entry>
				</map>
			</property>
		</bean>

		<bean id="transactionManager"
			class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory" />

		<context:annotation-config />
		<tx:annotation-driven transaction-manager="transactionManager" />
		<!-- <aop:aspectj-autoproxy/>-->
		<!--<context:mbean-export />-->

		<bean id="emailServiceRepository"
			class="org.pw.foodordering.engine.EmailServiceRepository">
			<property name="foodMailServer" ref="foodMailServer" />
			<property name="foodOrdering" ref="foodordering" />
		</bean>
		<bean id="emailTimerService"
			class="org.pw.foodordering.engine.EmailTimerService">
			<property name="emailServiceRepository"
				ref="emailServiceRepository" />
		</bean>

		<bean id="scheduledEmailTask"
			class="org.springframework.scheduling.timer.ScheduledTimerTask"
			lazy-init="false">
			<!-- wait 10 seconds -->
			<property name="delay" value="10000" />
			<property name="period" value="60000" />
			<property name="fixedRate" value="true" />
			<property name="timerTask" ref="emailTimerService" />
		</bean>

		 <bean id="timerFactory"
			class="org.springframework.scheduling.timer.TimerFactoryBean">
			<property name="daemon">
				<value>true</value>
			</property>
			<property name="scheduledTimerTasks">
				<list>
					<ref local="scheduledEmailTask" />
				</list>
			</property>
		</bean>

		<!-- Mail issues -->
		 <bean id="mailProperties" class="java.util.Properties"></bean>

		<bean id="mailSender"
			class="org.springframework.mail.javamail.JavaMailSenderImpl">
			<property name="protocol" value="${mail.protocol}" />
			<property name="port" value="${mail.port}" />
			<property name="host" value="${mail.host}" />
			<property name="username" value="${mail.username}" />
			<property name="password" value="${mail.password}" />

			 <property name="javaMailProperties">
				<props>
					<prop key="mail.smtp.auth">
						${mail.smtp.auth}
					</prop>
					<prop key="mail.smtp.starttls.enable">
						${mail.smtp.starttls.enable}
					</prop>
				</props>
			</property>
		</bean>

		 <bean id="foodMailServer"
			class="org.pw.foodordering.engine.FoodMailServer">
			<property name="mailSender">
				<ref bean="mailSender" />
			</property>
			<property name="myAddress"
				value="${info@foodclock.in}" />
		</bean> 

		<bean id="foodordering"
			class="org.pw.foodordering.engine.FoodOrderingHibernate" />


		  <bean id="businessAccessDecisionManager"
			class="org.springframework.security.access.vote.UnanimousBased">
			<property name="allowIfAllAbstainDecisions" value="true" />
			<property name="decisionVoters">
				<list>
					  <bean id="roleVoter"
						class="org.springframework.security.access.vote.RoleVoter"/>
					<!--  <ref local="aclReportAcceptVoter"/>-->
				</list>
			</property>
		</bean>
</beans>

